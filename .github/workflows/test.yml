name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: security_config_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Dependencies
        run: |
          cd src/frontend && npm ci
          cd ../backend && npm ci

      - name: Run Frontend Tests
        run: |
          cd src/frontend
          npm run test:coverage
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001
          NEXT_PUBLIC_CVE_API_URL: http://localhost:3002

      - name: Run Backend Tests
        run: |
          cd src/backend
          npm run test:coverage
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/security_config_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          NODE_ENV: test

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          file: |
            src/frontend/coverage/coverage-final.json
            src/backend/coverage/coverage-final.json
          fail_ci_if_error: true
